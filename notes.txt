-~-~-~-~-~-~-~-~- Tipos primitivos ~-~-~-~-~-~-~-~-~-



  int()  --> Para números inteiros ------------ 17, 21, 35, 42



  float() -> Números de ponto flutuante ---2.3, 1.6, 14.9, -67.1



  bool() --> Armazena True ou False --------True, False



  str() ----> Conjunto de caracteres -------- 'narigudo', 'Pedro', 'feioso'



  type() ---> Indica o tipo primitivo da var -  x = 'Sapo Tunado'   print(type(x)) logo seu tipo primitivo é string



-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-





-~-~-~-~-~-~-~- Operadores Aritméticos ~-~-~-~-~-~-~-



  + -> Adição              ** -> Potencia

  - -> Subtração           // -> Divisão inteira

  * -> Multiplicação        % -> Resto da divisão

  / > Divisão -





           Ordem de Precedência



  1° -> ()

  2° -> **

  3° -> *  /  //  %

  4° -> +  -



-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-





~-~-~-~-~-~-~--~-~-~ Módulos -~-~-~-~-~-~-~-~-~-~-~



  Import > Importa uma biblioteca - import math



  from math import cos -> Importa somente a funçao cos da biblioteca math



  math -> Biblioteca de operadores aritméticos {



     sqrt()  ---> Raiz Quadrada de um numero ------- raiz = math.sqrt(numero)

     floor() ---> Arredonda o numero para baixo ---- 5,23 fica 5,00

     ceil() -----> Retorna um valor inteiro ---------------- 5,23 fica 5

     hypot() ---> Retorna a hipotenusa dos catetos - math.hypot(co, ca)

     pow() ----> Potencia de um numero ---------------- pow(2, 3) = 2³ = 8

     radians()-> Converte em graus radianos ---------- print(math.radians(180))

     cos() -----> Retorne o cosseno em radianos --- print(math.cos(math.radians(x)))

     sin() ------> Retorne o seno em radianos --------- print(math.sin(math.radians(x)))

     tan() -----> Retorne a tangente em radianos---- print(math.tan(math.radians(x)))

  }



  random -> Gerar numeros pseudoaleatorios {



      randint() > Retorna um numero inteiro no range --------------- random.randint(1, 10)

      choice() --> Retorna um elemento aleatório da sequência - random.choice(x)

      shuffle() > Embaralha a sequência x no lugar ------------------- random.shuffle(y)

  }




-~-~-~-~-~-~-~-~- Manipulando Textos ~-~-~-~-~-~-~-~-



  frase = 'ESTOU APRENDENDO A PROGRAMAR EM PYHTON'



  frase[9] ------> Pega os caracteres das posições indicadas ------------------- letra E

  frase[9:13] -> Pega os caracteres das posições indicadas ------------------- ENDE

  frase[9:18:2]--> Pega os caracteres das posições indicadas pulando 2 - EDNOA

  len() -------------> Mostra quantas letras tem a frase -------------------------------- len(frase) = 38 letras

  count() ---------> Conta quantas vezes aparece a letra escolhida ----------- frase.count('s')

  find() ------------> Procura os caracteres escolhido ---------------------------------- frase.find('aprendendo')

  replace() ------> Troca uma palavra por outra na frase --------------------------- frase.replace('python','JavaScript')

  upper() ---------> Colocar todas as outras letras em maiúsculo -------------- frase.upper()

  lower() ---------> Colocar todas as outras letras em minusculo -------------- frase.lower()

  capilalize() ---> Coloca todas a frase em minusculo menos a 1 letra --- frase.capitalize()

  title() ------------> Todas as palavras começa com letra maiúscula --------- frase.title()

  strip() -----------> Tira o espaço do começo e no fim da frase ----------------- frase.strip()  frase.lstrip()  frase.rstrip()

  split() -----------> Vai ocorrer uma divisão entre os espaços da frase ----- frase.split()

  .join() -----------> Juntar uma coisa com a outra -------------------------------------- '-'.join.frase Estou-aprendendo-a-programar-em-python


-~-~-~-~-~-~-~-~- Condições -~-~-~-~-~-~-~-~-

if -----------> condição primaria que indica uma objeção no código. ----------------- if n2 > 8: print('o numero é maior que oito')

else -----------> condição secudária que é executada caso as informações não satisfaçam a primeira. if n2 > 8: print('o número é maior que oito')
else: print('o número é menor que oito')

-~-~-~-~-~-~-~-~- Cores no terminal -~-~-~-~-~-~-~-~-

Padrão de cores ANSI.
Este são os códigos de estilo e cor que melhor funcionam no Python.
Sintaxe: ``\033[ESTILO;FG;BGm``.
O texto deve ser inserido apos a letra ``m``.

Estilo:
- **0**: (Nome) sem cor.
- **1**: (old) Negrito.
- **4**: (Underline) Sublinhado.
- **7**: (Negative) Inverte letra e fundo.

Cor do texto (fg):
- **30**: Branco.
- **31**: Vermelho.
- **32**: Verde.
- **33**: Amarelo.
- **34**: Azul.
- **35**: Magenta.
- **36**: Cyan (azul claro).
- **37**: Cinza.

Cor de fundo (bg):
- **40**: Branco.
- **41**: Vermelho.
- **42**: Verde.
- **43**: Amarelo.
- **44**: Azul.
- **45**: Magenta.
- **46**: Cyan (azul claro).
- **47**: Cinza.

**OBS**: Para limpar/limitar a formatação deve-se utilizar ``\033[m``
"""

estilo = {'none': 0, 'negrito': 1, 'sublinhado': 4, 'inverter': 7}

fg = {'branco': 30, 'vermelho': 31, 'verde': 32, 'amarelo': 33,
      'azul': 34, 'magenta': 35, 'cyan': 36, 'cinza': 37}

bg = {'branco': 40, 'vermelho': 41, 'verde': 42, 'amarelo': 43,
      'azul': 44, 'magenta': 45, 'cyan': 46, 'cinza': 47}

Código para teste:

print('Estilo')
    print(f"\033[{estilo['none']}m Texto normal.")
    print(f"\033[{estilo['negrito']}m Texto em negrito.")
    print(f"\033[{estilo['sublinhado']}m Texto sublinhado.")
    print(f"\033[{estilo['inverter']}m Texto com fg e bg invertidos.\n\033[m")

    print('Cor da fonte')
    print('\033[0;30;0m Branco.')
    print('\033[0;31;0m Vermelho.')
    print('\033[0;32;0m Verde.')
    print('\033[0;33;0m Amarelo.')
    print('\033[0;34;0m Azul.')
    print('\033[0;35;0m Magenta.')
    print('\033[0;36;0m Cyan.')
    print('\033[0;37;0m Cinza.\n\033[m')

    print('Cor de fundo')
    print('\033[0;40;0m Branco.')
    print('\033[0;41;0m Vermelho.')
    print('\033[0;42;0m Verde.')
    print('\033[0;43;0m Amarelo.')
    print('\033[0;44;0m Azul.')
    print('\033[0;45;0m Magenta.')
    print('\033[0;46;0m Cyan.')
    print('\033[0;47;0m Cinza.\n\033[m')

Atualização da tabela de cores no python:

text              │   background
30      black     │   preto    40
31      red       │   vermelho 41
32      green     │   verde    42
33      yellow    │   amarelo  43
34      blue      │   azul     44
35      Magenta   │   Magenta  45
36      cyan      │   ciano    46
37      grey      │   cinza    47                  
97      white     │   branco   107

